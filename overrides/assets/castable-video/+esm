/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.39.0.
 * Original file: /npm/castable-video@1.1.11/castable-video.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{CustomVideoElement as e}from"/npm/custom-media-element@1.4.5/+esm";const t=new WeakMap;class a extends Error{}class s extends Error{}const i=["application/x-mpegURL","application/vnd.apple.mpegurl","audio/mpegurl"];function r(){return globalThis.cast?.framework?.CastContext.getInstance()}function n(){return r()?.getCurrentSession()}function c(){return n()?.getSessionObj().media[0]}function o(e){return r().setOptions({receiverApplicationId:"CC1AD845",autoJoinPolicy:"origin_scoped",androidReceiverCompatible:!1,language:"en-US",resumeSavedSession:!0,...e})}const l=new(globalThis.WeakRef?class extends Set{add(e){super.add(new WeakRef(e))}forEach(e){super.forEach((t=>{const a=t.deref();a&&e(a)}))}}:Set),h=new WeakSet;let d;var m;m=()=>{globalThis.chrome?.cast?.isAvailable?d||(d=cast.framework,r().addEventListener(d.CastContextEventType.CAST_STATE_CHANGED,(e=>{l.forEach((a=>t.get(a).onCastStateChanged?.(e)))})),r().addEventListener(d.CastContextEventType.SESSION_STATE_CHANGED,(e=>{l.forEach((a=>t.get(a).onSessionStateChanged?.(e)))})),l.forEach((e=>t.get(e).init?.()))):console.debug("chrome.cast.isAvailable",globalThis.chrome?.cast?.isAvailable)},globalThis.chrome?.cast?.isAvailable?globalThis.cast?.framework?m():customElements.whenDefined("google-cast-button").then(m):globalThis.__onGCastApiAvailable=()=>{customElements.whenDefined("google-cast-button").then(m)};let u=0;class y extends EventTarget{#e;#t;#a;#s;#i="disconnected";#r=!1;#n=new Set;#c=new WeakMap;constructor(e){super(),this.#e=e,l.add(this),t.set(this,{init:()=>this.#o(),onCastStateChanged:()=>this.#l(),onSessionStateChanged:()=>this.#h(),getCastPlayer:()=>this.#d}),this.#o()}get#d(){if(h.has(this.#e))return this.#a}get state(){return this.#i}async watchAvailability(e){if(this.#e.disableRemotePlayback)throw new a("disableRemotePlayback attribute is present.");return this.#c.set(e,++u),this.#n.add(e),queueMicrotask((()=>e(this.#m()))),u}async cancelWatchAvailability(e){if(this.#e.disableRemotePlayback)throw new a("disableRemotePlayback attribute is present.");e?this.#n.delete(e):this.#n.clear()}async prompt(){if(this.#e.disableRemotePlayback)throw new a("disableRemotePlayback attribute is present.");if(!globalThis.chrome?.cast?.isAvailable)throw new s("The RemotePlayback API is disabled on this platform.");const e=h.has(this.#e);h.add(this.#e),o(this.#e.castOptions),Object.entries(this.#s).forEach((([e,t])=>{this.#a.controller.addEventListener(e,t)}));try{await r().requestSession()}catch(t){if(e||h.delete(this.#e),"cancel"===t)return;throw new Error(t)}t.get(this.#e)?.loadOnPrompt?.()}#u(){h.has(this.#e)&&(Object.entries(this.#s).forEach((([e,t])=>{this.#a.controller.removeEventListener(e,t)})),h.delete(this.#e),this.#e.muted=this.#a.isMuted,this.#e.currentTime=this.#a.savedPlayerState.currentTime,!1===this.#a.savedPlayerState.isPaused&&this.#e.play())}#m(){const e=r()?.getCastState();return e&&"NO_DEVICES_AVAILABLE"!==e}#l(){const e=r().getCastState();if(h.has(this.#e)&&"CONNECTING"===e&&(this.#i="connecting",this.dispatchEvent(new Event("connecting"))),!this.#r&&e?.includes("CONNECT")){this.#r=!0;for(let e of this.#n)e(!0)}else if(this.#r&&(!e||"NO_DEVICES_AVAILABLE"===e)){this.#r=!1;for(let e of this.#n)e(!1)}}async#h(){const{SESSION_RESUMED:e}=d.SessionState;if(r().getSessionState()===e&&this.#e.castSrc===c()?.media.contentId){h.add(this.#e),Object.entries(this.#s).forEach((([e,t])=>{this.#a.controller.addEventListener(e,t)}));try{await(t=new chrome.cast.media.GetStatusRequest,new Promise(((e,a)=>{c().getStatus(t,e,a)})))}catch(e){console.error(e)}this.#s[d.RemotePlayerEventType.IS_PAUSED_CHANGED](),this.#s[d.RemotePlayerEventType.PLAYER_STATE_CHANGED]()}var t}#o(){d&&!this.#t&&(this.#t=!0,o(this.#e.castOptions),this.#e.textTracks.addEventListener("change",(()=>this.#y())),this.#l(),this.#a=new d.RemotePlayer,new d.RemotePlayerController(this.#a),this.#s={[d.RemotePlayerEventType.IS_CONNECTED_CHANGED]:({value:e})=>{!0===e?(this.#i="connected",this.dispatchEvent(new Event("connect"))):(this.#u(),this.#i="disconnected",this.dispatchEvent(new Event("disconnect")))},[d.RemotePlayerEventType.DURATION_CHANGED]:()=>{this.#e.dispatchEvent(new Event("durationchange"))},[d.RemotePlayerEventType.VOLUME_LEVEL_CHANGED]:()=>{this.#e.dispatchEvent(new Event("volumechange"))},[d.RemotePlayerEventType.IS_MUTED_CHANGED]:()=>{this.#e.dispatchEvent(new Event("volumechange"))},[d.RemotePlayerEventType.CURRENT_TIME_CHANGED]:()=>{this.#d?.isMediaLoaded&&this.#e.dispatchEvent(new Event("timeupdate"))},[d.RemotePlayerEventType.VIDEO_INFO_CHANGED]:()=>{this.#e.dispatchEvent(new Event("resize"))},[d.RemotePlayerEventType.IS_PAUSED_CHANGED]:()=>{this.#e.dispatchEvent(new Event(this.paused?"pause":"play"))},[d.RemotePlayerEventType.PLAYER_STATE_CHANGED]:()=>{this.#d?.playerState!==chrome.cast.media.PlayerState.PAUSED&&this.#e.dispatchEvent(new Event({[chrome.cast.media.PlayerState.PLAYING]:"playing",[chrome.cast.media.PlayerState.BUFFERING]:"waiting",[chrome.cast.media.PlayerState.IDLE]:"emptied"}[this.#d?.playerState]))},[d.RemotePlayerEventType.IS_MEDIA_LOADED_CHANGED]:async()=>{this.#d?.isMediaLoaded&&(await Promise.resolve(),this.#p())}})}#p(){this.#y()}async#y(){if(!this.#d)return;const e=(this.#a.mediaInfo?.tracks??[]).filter((({type:e})=>e===chrome.cast.media.TrackType.TEXT)),t=[...this.#e.textTracks].filter((({kind:e})=>"subtitles"===e||"captions"===e)),a=e.map((({language:e,name:a,trackId:s})=>{const{mode:i}=t.find((t=>t.language===e&&t.label===a))??{};return!!i&&{mode:i,trackId:s}})).filter(Boolean),s=a.filter((({mode:e})=>"showing"!==e)).map((({trackId:e})=>e)),i=a.find((({mode:e})=>"showing"===e)),r=n()?.getSessionObj().media[0]?.activeTrackIds??[];let o=r;r.length&&(o=o.filter((e=>!s.includes(e)))),i?.trackId&&(o=[...o,i.trackId]),o=[...new Set(o)];if(h=o,(l=r).length!==h.length||!l.every((e=>h.includes(e))))try{const e=new chrome.cast.media.EditTracksInfoRequest(o);await function(e){return new Promise(((t,a)=>{c().editTracksInfo(e,t,a)}))}(e)}catch(e){console.error(e)}var l,h}}const p=globalThis.document?(E=e,class extends E{static observedAttributes=[...E.observedAttributes??[],"cast-src","cast-content-type","cast-stream-type","cast-receiver"];#E={paused:!1};#g={receiverApplicationId:"CC1AD845",autoJoinPolicy:"origin_scoped",androidReceiverCompatible:!1,language:"en-US",resumeSavedSession:!0};#v;#P;get remote(){return this.#P?this.#P:globalThis.chrome?(this.disableRemotePlayback||function(){const e="https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1";if(globalThis.chrome?.cast||document.querySelector(`script[src="${e}"]`))return;const t=document.createElement("script");t.src=e,document.head.append(t)}(),t.set(this,{loadOnPrompt:()=>this.#S()}),this.#P=new y(this)):super.remote}get#d(){return t.get(this.remote)?.getCastPlayer?.()}attributeChangedCallback(e,t,a){if(super.attributeChangedCallback(e,t,a),"cast-receiver"===e&&a)this.#g.receiverApplicationId=a;else if(this.#d)switch(e){case"cast-stream-type":case"cast-src":this.load()}}async#S(){this.#E.paused=super.paused,super.pause(),this.muted=super.muted;try{await this.load()}catch(e){console.error(e)}}async load(){if(!this.#d)return super.load();const e=new chrome.cast.media.MediaInfo(this.castSrc,this.castContentType);e.customData=this.castCustomData;const t=[...this.querySelectorAll("track")].filter((({kind:e,src:t})=>t&&("subtitles"===e||"captions"===e))),a=[];let s=0;if(t.length&&(e.tracks=t.map((e=>{const t=++s;0===a.length&&"showing"===e.track.mode&&a.push(t);const i=new chrome.cast.media.Track(t,chrome.cast.media.TrackType.TEXT);return i.trackContentId=e.src,i.trackContentType="text/vtt",i.subtype="captions"===e.kind?chrome.cast.media.TextTrackType.CAPTIONS:chrome.cast.media.TextTrackType.SUBTITLES,i.name=e.label,i.language=e.srclang,i}))),"live"===this.castStreamType?e.streamType=chrome.cast.media.StreamType.LIVE:e.streamType=chrome.cast.media.StreamType.BUFFERED,e.metadata=new chrome.cast.media.GenericMediaMetadata,e.metadata.title=this.title,e.metadata.images=[{url:this.poster}],async function(e){try{const t=(await fetch(e,{method:"HEAD"})).headers.get("Content-Type");return i.some((e=>t===e))}catch(e){return console.error("Error while trying to get the Content-Type of the manifest",e),!1}}(this.castSrc)){const t=await async function(e){try{const t=await(await fetch(e)).text();let a=t;const s=function(e){const t=e.split("\n"),a=[];for(let e=0;e<t.length;e++)if(t[e].trim().startsWith("#EXT-X-STREAM-INF")){const s=t[e+1]?t[e+1].trim():"";s&&!s.startsWith("#")&&a.push(s)}return a}(t);if(s.length>0){const t=new URL(s[0],e).toString();a=await(await fetch(t)).text()}return function(e){if(!e)return;const t=e.match(/\.([a-zA-Z0-9]+)(?:\?.*)?$/);return t?t[1]:null}(a.split("\n").find((e=>!e.trim().startsWith("#")&&""!==e.trim())))}catch(e){return void console.error("Error while trying to parse the manifest playlist",e)}}(this.castSrc);t?.includes("m4s")||t?.includes("mp4")?(e.hlsSegmentFormat=chrome.cast.media.HlsSegmentFormat.FMP4,e.hlsVideoSegmentFormat=chrome.cast.media.HlsVideoSegmentFormat.FMP4):t?.includes("ts")&&(e.hlsSegmentFormat=chrome.cast.media.HlsSegmentFormat.TS,e.hlsVideoSegmentFormat=chrome.cast.media.HlsVideoSegmentFormat.TS)}const r=new chrome.cast.media.LoadRequest(e);r.currentTime=super.currentTime??0,r.autoplay=!this.#E.paused,r.activeTrackIds=a,await(n()?.loadMedia(r)),this.dispatchEvent(new Event("volumechange"))}play(){if(!this.#d)return super.play();this.#d.isPaused&&this.#d.controller?.playOrPause()}pause(){this.#d?this.#d.isPaused||this.#d.controller?.playOrPause():super.pause()}get castOptions(){return this.#g}get castReceiver(){return this.getAttribute("cast-receiver")??void 0}set castReceiver(e){this.castReceiver!=e&&this.setAttribute("cast-receiver",`${e}`)}get castSrc(){return this.getAttribute("cast-src")??this.querySelector("source")?.src??this.currentSrc}set castSrc(e){this.castSrc!=e&&this.setAttribute("cast-src",`${e}`)}get castContentType(){return this.getAttribute("cast-content-type")??void 0}set castContentType(e){this.setAttribute("cast-content-type",`${e}`)}get castStreamType(){return this.getAttribute("cast-stream-type")??this.streamType??void 0}set castStreamType(e){this.setAttribute("cast-stream-type",`${e}`)}get castCustomData(){return this.#v}set castCustomData(e){const t=typeof e;["object","undefined"].includes(t)?this.#v=e:console.error(`castCustomData must be nullish or an object but value was of type ${t}`)}get readyState(){if(this.#d)switch(this.#d.playerState){case chrome.cast.media.PlayerState.IDLE:return 0;case chrome.cast.media.PlayerState.BUFFERING:return 2;default:return 3}return super.readyState}get paused(){return this.#d?this.#d.isPaused:super.paused}get muted(){return this.#d?this.#d?.isMuted:super.muted}set muted(e){this.#d?(e&&!this.#d.isMuted||!e&&this.#d.isMuted)&&this.#d.controller?.muteOrUnmute():super.muted=e}get volume(){return this.#d?this.#d?.volumeLevel??1:super.volume}set volume(e){if(this.#d)return this.#d.volumeLevel=+e,void this.#d.controller?.setVolumeLevel();super.volume=e}get duration(){return this.#d&&this.#d?.isMediaLoaded?this.#d?.duration??NaN:super.duration}get currentTime(){return this.#d&&this.#d?.isMediaLoaded?this.#d?.currentTime??0:super.currentTime}set currentTime(e){if(this.#d)return this.#d.currentTime=e,void this.#d.controller?.seek();super.currentTime=e}}):class{};var E;globalThis.customElements&&!globalThis.customElements.get("castable-video")&&(globalThis.CastableVideoElement=p,globalThis.customElements.define("castable-video",p));export{p as CastableVideoElement};export default null;
//# sourceMappingURL=/sm/f49b23fee1c2de244c7c48d1ccd290554509427a9f94a8886bfd3d7e80e57044.map